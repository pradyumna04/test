

pipeline {
    agent any
    //triggers { cron('* * * * *') }
    triggers {
        pollSCM('* * * * *')
    }
    options { timeout(time: 5) }
    parameters {
        booleanParam(name: 'DEBUG_BUILD', defaultValue: true,
                description: 'Is it the debug build?')
    }
    stages {

        //stage("Checkout") {
        //    steps {
        //        git url: 'https://github.com/pradyumna04/test.git'
        //    }
        //}

        stage("Compile") {
            steps {
                sh "./mvnw compile"
            }

         }

        stage("Unit test") {
            steps {
                sh "./mvnw test"
            }
        }

        stage("Code coverage") {
            steps {
                sh "./mvnw package"
                publishHTML (target: [
                reportDir: 'target/jacoco-report',
                reportFiles: 'index.html',
                reportName: "JaCoCo Report"
                ])
            }
        }

        stage("Static code analysis") {
            steps {
                sh "./mvnw checkstyle:check"
                publishHTML (target: [
                reportDir: 'target',
                reportFiles: 'checkstyle-result.xml',
                reportName: "Checkstyle Report"
                ])
            }
        }

        stage("Docker build") {
            steps {
                //sh "docker build -t prad/calculator ."
                sh "docker-compose build"
            }
        }

         //stage("Docker push") {
         //           steps {
         //               sh "docker login -u un -p pwd"
         //               sh "docker push pradyumna04/calculator"
         //               sh "docker-compose push"
         //           }
         //}

        stage("Deploy to staging") {
            steps {
                //sh "docker run -d --rm -p 8765:8080 --name calculator pradyumna04/calculator"
                sh "docker-compose up -d"

            }
        }

        stage("Acceptance test") {
            steps {
                //sleep 60
                //sh "./acceptance_tests.sh"
                sh "docker-compose -f docker-compose.yml -f acceptancev2/docker-compose-acceptance.yml build"
                sh "docker-compose -f docker-compose.yml -f acceptancev2/docker-compose-acceptance.yml -p acceptance up -d"
                sh 'test $(docker wait acceptance_test_1) -eq 0'
                sh "mvn test -Pacceptance-tests  -Dcalculator.url=http://localhost:8080"
            }
        }


        // stage('Example') {
        //     environment { NAME = 'Rafal' }
        //     when { expression { return params.DEBUG_BUILD } }
        //     steps {
        //         echo "Hello from $NAME"
        //         script {
        //             def browsers = ['chrome', 'firefox']
        //             for (int i = 0; i < browsers.size(); ++i) {
        //                 echo "Testing the ${browsers[i]} browser."
        //             }
        //         }
        //     }
        // }

    }

    post {
        always {
            echo 'I will always say Hello again!'
            //sh "docker stop calculator"
            sh "docker-compose down"
            sh "docker-compose -f docker-compose.yml -f acceptancev2/docker-compose-acceptance.yml -p acceptance down"
        }
    }
}